package com.nhnacademy.gateway.broker;

/**
 * 시스템 내 브로커의 역할(Role)을 구분하기 위한 열거형(enum)입니다.
 *
 * <p>이 열거형은 브로커가 내부 시스템에서 어떤 목적과 방향으로 동작하는지를 명시하며,
 * 실제 사용하는 프로토콜(MQTT, Modbus, HTTP 등)과는 무관하게 사용됩니다.</p>
 *
 * <p>예를 들어, 내부 서비스를 연결하는 브로커는 {@link #CORE}로, 외부 장치 또는 제3자 시스템과
 * 통신하는 브로커는 {@link #INBOUND}로 지정됩니다. 각 브로커는 역할에 따라 설정, 인증, 연결 방식이 달라질 수 있으며,
 * 이를 명확하게 구분하고 관리하기 위해 본 열거형이 사용됩니다.</p>
 *
 * <ul>
 *     <li>{@link #CORE} - 내부 서비스 간 통신 및 데이터 처리 목적의 브로커</li>
 *     <li>{@link #INBOUND} - 외부 장치 또는 외부 시스템으로부터 데이터를 수신하는 브로커</li>
 * </ul>
 *
 * <p>※ 이 enum은 현재 MQTT 브로커 설정에 사용되지만, 향후 Modbus, HTTPS 등 다른 프로토콜 기반의 브로커에도
 * 동일한 방식으로 확장 적용될 수 있습니다.</p>
 */
public enum BrokerType {

    /**
     * 내부 서비스 또는 컴포넌트 간의 데이터 흐름을 담당하는 브로커입니다.
     *
     * <p>주로 마이크로서비스 간 통신, 데이터 가공, 이벤트 흐름 등을 처리하는 데 사용됩니다.</p>
     */
    CORE,

    /**
     * 외부 장치, 시스템, 벤더 또는 파트너사로부터 데이터를 수신하는 역할을 하는 브로커입니다.
     *
     * <p>IoT 디바이스, 외부 게이트웨이, 타 시스템과의 인터페이스 지점에 위치합니다.</p>
     */
    INBOUND
}
